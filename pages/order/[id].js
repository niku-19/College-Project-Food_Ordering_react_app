import { client } from "../../lib/client";
import Layout from "../../components/layout";
import css from "../../styles/OrderSucces.module.css";
import { UilBill, UilBox } from "@iconscout/react-unicons";
import Image from "next/Image";
import cooking from "../../assets/cooking.png";
import onWay from "../../assets/onWay.png";
import spinner from "../../assets/spinner.svg";
import { useEffect } from "react";
import { runFirework } from "../../lib/utils";
import Head from "next/head";


// import delivered from "../../assets/delivered.svg";

export const getServerSideProps = async ({ params }) => {
  const query = `*[_type == 'order' && _id == '${params.id}']`;
  const order = await client.fetch(query);
  return {
    props: {
      order: order[0],
    },
  };
};
export default function Orders({ order }) {
  useEffect(() => {
    if (order.status > 3) {
      localStorage.clear();
    }
  }, [order]);

  useEffect(() => {
    localStorage.clear();
    runFirework();
  }, []);

  return (
    <Layout>
       <Head>
          <title>FUDO</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/Logo.png" />
        </Head>
      <div className={css.container}>
        <span className={css.heading}>Order in Process</span>
        <div className={css.details}>
          <div>
            <span>Order ID</span>
            <span>{order._id}</span>
          </div>
          <div>
            <span>Customer Name</span>
            <span>{order.name}</span>
          </div>
          <div>
            <span>Phone Number</span>
            <span>{order.phone}</span>
          </div>
          <div>
            <span>Method</span>
            <span>
              {order.method === 0
                ? "Cash On Delivery"
                : "Online Payment {Paid}"}
            </span>
          </div>
          <div>
            <span>Total</span>
            <span> â‚¹ {order.total}</span>
          </div>
        </div>

        <div className={css.statusContainer}>
          <div className={css.status}>
            <UilBill width={50} height={50} />
            <span>Payment</span>
            {order.method === 0 ? (
              <span className={css.pending}> on Delivery </span>
            ) : (
              <span className={css.completed}> Completed </span>
            )}
          </div>

          <div className={css.status}>
            <Image src={cooking} alt="" width={50} height={50} />
            <span>Cooking</span>

            {order.status === 1 && (
              <div className={css.spinner}>
                <Image src={spinner} alt="" />
              </div>
            )}

            {order.status > 1 && (
              <span className={css.completed}>Completed</span>
            )}
          </div>
          <div className={css.status}>
            <Image src={onWay} alt="" width={50} height={50} />
            <span>OnWay</span>
            {order.status === 2 && (
              <div className={css.spinner}>
                <Image src={spinner} alt="" />
              </div>
            )}
            {order.status > 2 && (
              <span className={css.completed}>Completed</span>
            )}
          </div>
          <div className={css.status}>
            <UilBox width={50} height={50} />
            <span>delivered</span>
            {order.status === 3 && (
              <div className={css.spinner}>
                <Image src={spinner} alt="" />
              </div>
            )}
            {order.status > 3 && (
              <span className={css.completed}>Completed</span>
            )}
          </div>
        </div>
      </div>
    </Layout>
  );
}
